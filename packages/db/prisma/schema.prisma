generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int                 @id @default(autoincrement())
  email              String?             @unique
  name               String?
  number             String              @unique
  password           String
  upiId              String?             @unique

  OnRampTransaction  OnRampTransaction[]
  balances           UserBalance[]       

  sentTransfers      P2pTransfer[]       @relation(name: "FromUserRelation")
  receivedTransfers  P2pTransfer[]       @relation(name: "ToUserRelation")
}

model Merchant {
  id                Int               @id @default(autoincrement())
  email             String            @unique
  name              String?
  number            String?           @unique
  upiId             String?           @unique
  auth_type         AuthType
  balances          MerchantBalance[] 
  receivedTransfers P2pTransfer[]    @relation("ToMerchantRelation")

}

model OnRampTransaction {
  id         Int          @id @default(autoincrement())
  status     OnRampStatus
  token      String       @unique
  provider   String
  amount     Int
  startTime  DateTime
  userId     Int
  user       User         @relation(fields: [userId], references: [id])
}

model P2pTransfer {
  id            Int      @id @default(autoincrement())
  amount        Int
  timestamp     DateTime
  
  fromUserId    Int
  fromUser      User     @relation(name: "FromUserRelation", fields: [fromUserId], references: [id])

  toUserId      Int?
  toUser        User?     @relation(name: "ToUserRelation", fields: [toUserId], references: [id])

  toMerchantId  Int?
  toMerchant    Merchant? @relation(name: "ToMerchantRelation", fields: [toMerchantId], references: [id])
}

model UserBalance {
  id      Int  @id @default(autoincrement())
  userId  Int  @unique
  amount  Int  @default(0)
  locked  Int  @default(0)
  user    User @relation(fields: [userId], references: [id])
}

model MerchantBalance {
  id          Int      @id @default(autoincrement())
  merchantId  Int      @unique
  amount      Int      @default(0)
  locked      Int      @default(0)
  merchant    Merchant @relation(fields: [merchantId], references: [id])
}

enum AuthType { 
  Google
  Github
}

enum OnRampStatus {
  Success
  Failure
  Processing
}
